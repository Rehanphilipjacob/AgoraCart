<form id="checkout-form" action="/place-order" class="py-4">
  <div class="container" style="max-width: 600px;">
    <!-- Delivery Details -->
    <div class="card shadow-sm mb-4">
      <div class="card-header bg-primary text-white text-center">
        <h4 class="mb-0">Delivery Details</h4>
      </div>
      <div class="card-body">
        <div class="form-floating mb-3">
          <input type="text" class="form-control" name="address" id="address" placeholder="Enter address" required>
          <label for="address">Address</label>
        </div>
        <div class="form-floating mb-3">
          <input type="text" class="form-control" name="pincode" id="pincode" pattern="\d{6}" placeholder="Enter pincode" required>
          <label for="pincode">Pincode</label>
        </div>
        <div class="form-floating">
          <input type="tel" class="form-control" name="mobile" id="mobile" pattern="[6-9]\d{9}" placeholder="Enter mobile number" required>
          <label for="mobile">Mobile Number</label>
        </div>
      </div>
    </div>

    <!-- Payment Option -->
    <div class="card shadow-sm">
      <div class="card-header bg-success text-white text-center">
        <h4 class="mb-0">Payment Option</h4>
      </div>
      <div class="card-body">
        <h5 class="text-center mb-3 fw-bold text-success">Total: â‚¹{{total}}</h5>
        <div class="form-check mb-2">
          <input type="radio" class="form-check-input" id="cod" name="paymentopt" value="cod" required>
          <label class="form-check-label" for="cod">Cash On Delivery</label>
        </div>
        <div class="form-check">
          <input type="radio" class="form-check-input" id="online" name="paymentopt" value="online" required>
          <label class="form-check-label" for="online">Online Payment</label>
        </div>
        <input type="hidden" name="userId" value="{{user}}">
        <button type="submit" class="btn btn-success mt-4 w-100">Place Order</button>
      </div>
    </div>
  </div>
</form>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
document.addEventListener('DOMContentLoaded', () => {
  const form = document.getElementById('checkout-form');

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    console.log("place order fetch is success");

    try {
      const formData = Object.fromEntries(new FormData(form).entries());

      const response = await fetch('/place-order', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(formData)
      });

      if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);

      const data = await response.json();

      if (data.codSuccess) {
        window.location.href = '/order-success';
      } else {
        startRazorpayPayment(data);
      }
    } catch (error) {
      console.error("Error placing order:", error);
      alert("An error occurred while placing the order. Please try again.");
    }
  });

  function startRazorpayPayment(order) {
    const options = {
      key: '{{key_id}}',
      amount: order.amount,
      currency: "INR",
      name: "Ecommerce App",
      description: "Order Payment",
      order_id: order.id,
      handler: function (payment) {
        verifyPayment(payment, order);
      },
      prefill: {
        name: "{{userName}}",
        email: "{{userEmail}}",
        contact: document.querySelector("input[name='mobile']").value
      },
      notes: {
        address: document.querySelector("input[name='address']").value
      },
      theme: { color: "#3399cc" }
    };

    const rzp = new Razorpay(options);
    rzp.on('payment.failed', function () {
      alert("Payment failed. Please try again.");
    });
    rzp.open();
  }

  async function verifyPayment(payment, order) {
    try {
      const response = await fetch('/verify-payment', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ payment, order })
      });

      if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);

      const data = await response.json();

      if (data.status) {
        window.location.href = '/order-success';
      } else {
        alert("Online payment verification failed.");
      }
    } catch (error) {
      console.error('Error verifying payment:', error);
      alert("Error verifying payment.");
    }
  }
});

</script>
