<table class="table table-bordered align-middle mt-4">
  <thead class="table-light">
    <tr>
      <th scope="col">Product</th>
      <th scope="col" style="width:120px;" class="text-end">Price (Rs.)</th>
      <th scope="col">Category</th>
      <th scope="col" style="width:150px;" class="text-center">Quantity</th>
      <th scope="col" style="width:100px;" class="text-center">Action</th>
    </tr>
  </thead>
  <tbody>
    {{#each products}}
    <tr>
      <td>
        <div class="d-flex align-items-center">
          <img src="/product-images/{{this.product._id}}.jpg" class="me-3" style="width:50px; height:50px; object-fit:cover;">
          <span>{{this.product.Name}}</span>
        </div>
      </td>
      <td class="text-end">₹{{this.product.Price}}</td>
      <td>{{this.product.Category}}</td>
      <td class="text-center">
        <div class="btn-group" role="group">
          <button class="btn btn-outline-secondary btn-sm"
                  {{#if (equals this.quantity 1)}}disabled{{/if}}
                  onclick="changeQuantity('{{this._id}}','{{this.product._id}}','{{@root.user._id}}',-1)">
            −
          </button>
          <span id="{{this.product._id}}" class="px-3">{{this.quantity}}</span>
          <button class="btn btn-outline-secondary btn-sm"
                  onclick="changeQuantity('{{this._id}}','{{this.product._id}}','{{@root.user._id}}',1)">
            +
          </button>
        </div>
      </td>
      <td class="text-center">
        <button class="btn btn-danger btn-sm" onclick="removeProduct('{{this._id}}','{{this.product._id}}')">
          Remove
        </button>
      </td>
    </tr>
    {{/each}}
  </tbody>
</table>

<hr>
<div class="d-flex justify-content-end align-items-center">
  <h4 class="me-5">Total: Rs.<span id="totalValue">{{total}}</span></h4>
  <a href="/place-order" class="btn btn-success">Place Order</a>
</div>

<script>
  function changeQuantity(cartId, proId, userId, count) {
    let quantity = parseInt(document.getElementById(proId).textContent);

    {{!-- $.ajax({
      url: '/change-product-quantity',
      method: 'POST',
      data: {
        user: userId,
        cart: cartId,
        product: proId,
        count: count,
        quantity: quantity
      },
      success: (response) => {
        if (response.removeProduct) {
          alert("The product has been removed from the cart.");
          location.reload();
        } else {
          document.getElementById(proId).textContent = quantity + count;
          document.getElementById('totalValue').textContent = response.total['$numberDecimal'];
        }
      }
    }); --}}

     fetch('/change-product-quantity', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      user: userId,
      cart: cartId,
      product: proId,
      count: count,
      quantity: quantity
    })
  })
  .then(response => {
    if (!response.ok) throw new Error('Network response was not ok');
    return response.json();
  })
  .then(response => {
    if (response.removeProduct) {
      alert("The product has been removed from the cart.");
      location.reload();
    } else {
      // Convert to numbers to avoid string concatenation
      document.getElementById(proId).textContent = Number(quantity) + Number(count);
      document.getElementById('totalValue').textContent = response.total['$numberDecimal'];
    }
  })
  .catch(error => console.error('Fetch error:', error));
  }

  function removeProduct(cartId, proId) {
    fetch('/remove-product',{
      method:'POST',
      headers:{'Content-Type':'application/json'},
      body:JSON.stringify({
        cart:cartId,product:proId
      })
    }).then((response)=>{
      if(!response.ok) throw new Error('Network response was not okay')
      location.reload()
    }).catch((error)=>{
      console.error("There was problem removing the product:",error)
      alert("Failed to remove product")
    })
  }
</script>
